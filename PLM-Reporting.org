* Introduction
[[http://www.loria.fr/~quinson/Teaching/PLM/][PLM]] est un logiciel permettant l'apprentissage de la programmation à travers différents exercices. 
Les exercices se constituent de mondes graphiques, eux-mêmes constitués d'entités avec lesquelles 
l'élève doit interagir en lignes de code, afin d'arriver à une solution qui correspond à une certaine 
configuration du monde.

Il devrait être possible de créer de nouveaux exercices pour PLM de manière simple et intuitive. 
Cela nécessite un éditeur qui doit permettre la création du monde, de la mission et du code solution 
d'un nouvel exercice.

PLM passant du client lourd en Java actuel à un client web, mon objectif est de concevoir et réaliser 
un éditeur d'exercices pour la nouvelle version de PLM. Un tel éditeur doit permettre de créer les 
nouveaux exercices avec leur monde, leur mission et leur code solution. Cela comprend tout d'abord 
la création du monde. Par exemple, il existe des mondes de type BuggleWorld, constitués d'une grille 
pour laquelle on doit pouvoir éditer les cellules (changer la couleur, ajouter un message...) et y placer 
des murs, des objets, ou des entités (les Buggles). Ensuite, la création de la mission, où l'on doit 
pouvoir écrire les consignes de l'exercice en HTML. Des balises personnalisées permettent d'écrire et
d'afficher la mission selon différents langages de programmation. Enfin, la création de la solution où 
l'on doit pouvoir écrire le code solution, avec une partie définie qui sera affichée à l'élève et 
une autre qu'il devra écrire de lui-même.

* Technical setup
1. [[https://www.playframework.com/documentation/2.3.x/Installing][Installer le Play Framework]]
2. Cloner le dépôt [[https://github.com/BenjaminThirion/webPLM][webPLM]]
  1. git clone https://github.com/BenjaminThirion/webPLM.git
3. Lancer l'application
  1. cd path/to/webPLM
  2. activator start
  3. Accéder à http://localhost:9000

* Journal
** <2015-04-27>
*** Done
- Amélioration de la gestion des couleurs
  - Affichage des couleurs prédéfinies dans un bouton type "dropdown"
  - Un lien de la liste ouvre une nouvelle fenêtre pour entrer une valeur personnalisée
  - Un autre lien de la liste met en mode "pipette" pour sélectionner la couleur d'une cellule
- Amélioration de l'affichage des boutons
  - Regroupement des boutons liés
  - Boutons dont la commande est actuellement active dans une autre couleur
** <2015-04-24>
*** Done
- Editeur de mission
  - Affichage de la mission selon les langages sélectionnés
- Début de l'éditeur de solution
*** Questions
*** Planned [0/0]
** <2015-04-23>
*** Done
- Début de l'éditeur de missions
  - Menu déroulant pour passer de l'édition du monde à celui de la
    mission et inversement
  - Envoie du texte entré par l'utilisateur au serveur
  - Retour du texte filtré par le serveur, en mode tous les langages
- Début de réflexion sur la sauvegarde
*** Questions
*** Planned [2/4]
- [X] Afficher la mission selon les langages sélectionnés
- [ ] Afficher des indications et/ou un texte par défaut dans l'éditeur de
  missions pour aider l'utilisateur
- [X] Débuter l'éditeur de solution
- [ ] Réfléchir sur la sauvegarde
** <2015-04-22>
*** Done
- Correction d'un bug si on renomme buggle1 en buggle2 avant de créer
  un nouveau Buggle
- Correction de l'erreur "editor.selectedBuggle is null" et
  "editor.world is null"
- Affichage et édition du texte d'une cellule dans le tableau des
  propriétés
  - Suppression de la méthode setText et de l'attribut setTextInput
    pour utiliser une méthode getter/setter
- Edition de la couleur d'un Buggle dans le tableau des propriétés
  - Choix entre les couleurs proposées et une couleur r/g/b
    personnalisée
  - Ajout de conversions dans le service color pour les couleurs
    personnalisées
- Edition de la couleur de la cellule sélectionnée dans le tableau des
  propriétés
- Edition du nom du monde dans le tableau des propriétés
*** Questions
*** Planned [0/0]
** <2015-04-21>
*** Done
- Possibilité de modifier la hauteur du monde en éditant le tableau
  des propriétés
  - Création d'une méthode de buggleworld qui ajoute ou retire un
    certain nombre de colonnes
- Possibilité de modifier les propriétés de la cellule sélectionnée
  dans le tableau des propriétés
  - Checkbox pour mettre/enlever murs ou baggle
- Possibilité de modifier les propriétés du buggle sélectionné dans le
  tableau des propriétés
  - Modifier le nom, la direction (liste déroulante), et la couleur
    (liste déroulante)
*** Questions
*** Planned [5/5]
- [X] Corriger les erreurs "editor.selectedBuggle is null" quand aucun
  Buggle n'est sélectionné
- [X] Corriger l'erreur "editor.world is null" au démarrage de l'éditeur
- [X] Pouvoir choisir une couleur personnalisée pour un Buggle
- [X] Afficher et pouvoir éditer la couleur et le texte d'une cellule dans
  le tableau des propriétés
- [X] Commencer à réfléchir sur l'éditeur de missions
** <2015-04-20>
*** Done
- Possibilité de modifier la largeur du monde en éditant le tableau
  des propriétés
  - Utilisation des getter/setters avec ngModel
  - Création d'une méthode de buggleworld qui ajoute ou retire un
    certain nombre de colonnes
*** Questions
*** Planned [1/1]
- [X] Possibilité de modifier les autres propriétés du monde
** <2015-04-17>
*** Done
- Boutons d'ajout et de suppression de lignes et de colonnes
  - Boutons pour supprimer une ligne ou une colonne sélectionnée
  - Bouton pour ajouter une colonne à gauche ou à droite de celle sélectionnée
  - Bouton pour ajouter un ligne au dessus ou en dessous de celle sélectionnée
  - Méthodes d'ajout et de suppression dans buggleworld
*** Planned [1/1]
- [X] Améliorer l'affichage des boutons des commandes
** <2015-04-16>
*** Done
- Début des boutons de suppression et d'ajout de lignes et de  colonnes
  - Méthode de suppression d'une ligne dans buggleworld
  - Correction inversion ligne / colonne dans la méthode de création d'un monde vide
*** Planned [1/1]
- [X] Terminer les boutons de suppression de lignes et colonnes
** <2015-04-15>
*** Done
- Ajout d'une couleur par son nom
  - Création du service color pour les conversions noms / rgb
- Ajout du bouton d'ajout de messages dans les cellules
*** Questions
*** Planned [1/1]
- [X] Pouvoir éditer les propriétés du monde dans le tableau des propriétés
** <2015-04-14>
*** Done
- Tableau pour afficher les propriétés du monde
  - Directive AngularJS world-edition-properties
- Bouton d'ajout de Buggles
- Bouton de suppression de Buggles
- Fenetre pour choisir une custom color (r/g/b) et coloriage des cases avec cette couleur
*** Questions
*** Planned [1/1]
- [X] Ajout d'une couleur par son nom
** <2015-04-13>
*** Done
- Détection de la case sur laquelle on clique
- Ajout d'un attribut aux cellules permettant de savoir si elles sont sélectionnées
- Boutons d'ajout des murs et des baggles.
  - Création de la directive AngularJS world-edition-commands
- Début de l'ajout des buggles.
*** Questions
*** Planned [2/2]
- [X] Autres boutons d'ajout d'élements dans le monde
- [X] Boutons de suppression de lignes et colonnes
** <2015-04-10>
*** Done
- Méthode pour créer un monde vide dans le modèle buggleworld de webPLM
- Affichage d'un monde vide au lancement de l'éditeur webPLM
  - Création de la directive AngularJS world-edition
- Essais de dessins et de détections d'événements sur élément <canvas>
*** Questions
*** Planned [1/1]
- [X] Détecter les coordonnées du click pour sélectionner une cellule
** <2015-04-09>
*** Done
- Fork de PLM et webPLM
- Etude plus en détail de la partie exercice de  webPLM et du code de l'editeur actuel de PLM
- Lecture des bonnes pratiques AngularJS utilisées pour webPLM (https://github.com/johnpapa/angular-styleguide)
- Lecture d'un tutoriel sur l'élément HTML <canvas> utilisé pour dessiner le monde
- Création du controleur et de la vue Editor pour débuter le code
*** Questions
- Comment créer un monde vide au chargement de l'éditeur
*** Planned [1/1]
- [X] Afficher un monde vide au chargement de l'éditeur
** <2015-04-08>
*** Done
- Installation des outils de travail
- Installation du play framework pour lancer webPLM en local
- Etude du fonctionnement et du code de webPLM et PLM
- Etude du fonctionnement de l'editeur actuel de PLM
*** Questions
*** Planned [0/0]
** <2015-04-07>
*** Done
- Visualisation du cours Code School sur AngularJS
*** Questions
*** Planned [0/0]

